/* ! Keywords to , at , from */

body {
  display: flex;
  flex-wrap: wrap;
}
.container {
  width: 300px;
  margin: 5px;
  height: 300px;
  background: linear-gradient(0.75turn, red, blue);
}
.container1 {
  width: 300px;
  height: 300px;
  margin: 5px;
  background: linear-gradient(to bottom right, red, 20%, blue);
  /*  By default, the gradient transitions evenly from one color to the next. You can include a color-hint to move the midpoint of the transition value to a certain point along the gradient. In this example, we've moved the midpoint of the transition from the 50% mark to the 20% mark.*/
  /* ^ OR */
  /* this 20% used on red after ',' tells us that only 20% of red can be seen on the gradient. If there was no ',' then it will say that after 20% the gradient should start  */
}
.container2 {
  width: 300px;
  height: 300px;
  margin: 5px;
  background: linear-gradient(75deg, red, blue);
}
.container3 {
  width: 300px;
  height: 300px;
  margin: 5px;
  background: conic-gradient(red, blue, green);
}
/* percentages in linear gradient */

.container4 {
  width: 300px;
  height: 300px;
  margin: 5px;
  background: linear-gradient(red 20%, blue 50%);

  /* it will take 20% of the height red then start gradient and after 50% we will start with only blue */
}
.container5 {
  width: 300px;
  height: 300px;
  margin: 5px;
  background: linear-gradient(red 30%, blue 30%);

  /* until 30% of height we will have red and at 30% blue will start till the end of the height */
}
.container6 {
  width: 300px;
  height: 300px;
  margin: 5px;
  background: linear-gradient(90deg, red 33.3%, blue 33.3% 66.6%, yellow 66.6%);
  /* here the red color will be upto 33.3% and blue will start from 33.3% to 66.6% and yellow will start from 66.6% till the end  */
}
.container7 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background: radial-gradient(red 50%, blue 50%);
}
.container8 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background: repeating-linear-gradient(
    to top right,
    red 0px 20px,
    blue 20px 40px,
    yellow 40px 60px
  );
  /* here u cant give percentage but you should give the width of each strip as given above */
}
.container9 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background: repeating-linear-gradient(
    to top right,
    red 0px,
    blue 30px,
    yellow 60px
  );
  /* if u want gradient effect then u give the points where each color should start */
}

.container10 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background: repeating-radial-gradient(
    red 0px 15px,
    blue 15px 30px,
    yellow 30px 45px
  );
}
.container11 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background: repeating-radial-gradient(rgb(255, 166, 0) 0px, white 30px);
  /* & if you want to have shade then just give the thickness of the ring as shown above */
}

/* Problem: use 4 colors in a linear gradient and have a white strip in the middle OR using one div tag create 2 boxes  */
.container12 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: linear-gradient(
    to right,
    rgb(77, 9, 20),
    rgb(183, 74, 92) 50%,
    white 50% 52%,
    rgb(255, 115, 0) 52%,
    rgb(255, 213, 0)
  );

  /* until 50% the gradient of first 2 colors will be present because we havent given any break points in those colors and after that white starts from 50-52% where we get our white strip then the next color starts from 52% then we get a white strip in the middle  */
}
.container13 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: linear-gradient(
      to top left,
      rgba(255, 0, 0),
      20%,
      rgba(255, 0, 0, 0) 80%
    ),
    linear-gradient(
      to bottom right,
      rgb(0, 0, 255),
      10%,
      rgba(0, 0, 255, 0) 80%
    ),
    linear-gradient(to left bottom, green, rgba(255, 167, 25, 0) 80%),
    linear-gradient(to right top, yellow, rgba(255, 255, 0, 0) 80%),
    radial-gradient(circle, black, black);

  /* & multi gradient example */
}

.container14 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: radial-gradient(
    circle at 100px 0px,
    red 15%,
    orange 40%,
    yellow 80%
  );
  /* & we can position our radial gradient using 'at' 
  
  Positioning the center of the gradient
You can position the center of the gradient with keyterms, percentage, or absolute lengths, length and percentage values repeating if only one is present, otherwise in the order of position from the left and position from the top.
  */
}

/* & Sizing radial gradient radial gradient */

/* Unlike linear gradients, you can specify the size of radial gradients. Possible values include closest-corner, closest-side, farthest-corner, and farthest-side, with farthest-corner being the default. Circles can also be sized with a length, and ellipses a length or percentage. */

.container15 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: radial-gradient(
    ellipse farthest-corner at 40px 70px,
    red 10%,
    yellow 30%,
    blue 50%,
    black
  );
}
.container16 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: radial-gradient(
    circle farthest-corner at 40px 70px,
    red 10%,
    yellow 30%,
    blue 50%,
    black
  );
}

.container17 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: radial-gradient(
    ellipse farthest-side at 40px 70px,
    red 10%,
    yellow 30%,
    blue 50%,
    black
  );
}
.container18 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: radial-gradient(
    circle farthest-side at 40px 70px,
    red 10%,
    yellow 30%,
    blue 50%,
    black
  );
}
.container19 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: radial-gradient(
    ellipse closest-corner at 40px 70px,
    red 10%,
    yellow 30%,
    blue 50%,
    black
  );
}
.container20 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: radial-gradient(
    circle closest-corner at -10px 70px,
    red 10%,
    yellow 30%,
    blue 50%,
    black
  );
}
.container21 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: radial-gradient(
    ellipse closest-side at 40px 70px,
    red 10%,
    yellow 30%,
    blue 50%,
    black
  );
}
.container22 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: radial-gradient(
    circle closest-side at 40px 70px,
    red 10%,
    yellow 30%,
    blue 50%,
    black
  );
}

/* & length or percentage for ellipses */

/* For ellipses only, you can size the ellipse using a length or percentage. The first value represents the horizontal radius, the second the vertical radius, where you use a percentage this corresponds to the size of the box in that dimension. */

.container23 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: radial-gradient(
    ellipse 20px 60%,
    red 10%,
    yellow 30%,
    blue 50%,
    black
  );
}

.container24 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: radial-gradient(
    ellipse 100px 60px,
    red 10%,
    yellow 30%,
    blue 50%,
    black
  );
}

/* & length for circles */

/* For circles the size may be given as a <length>, which is the size of the circle. */
.container25 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: radial-gradient(
    circle 300px,
    red 10%,
    yellow 30%,
    blue 50%,
    black
  );
}

/* & Positioning the conic center */
/* Like radial gradients, you can position the center of the conic gradient with keyterms, percentage, or absolute lengths, with the keyword "at" */

.container26 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: conic-gradient(
    at 30px 70%,
    red 10%,
    yellow 30%,
    blue 50%,
    black
  );
}

/* & Changing the angle */
/* By default, the different color stops you specify are spaced equidistantly around the circle. You can position the starting angle of the conic gradient using the "from" keyword at the beginning followed by an angle or a length, and you can specify different positions for the colors stops by including an angle or length after them. */

.container27 {
  width: 300px;
  margin: 5px;
  height: 300px;
  background-image: conic-gradient(
    from 115deg,
    rgb(158, 1, 1),
    rgb(255, 191, 0),
    rgb(2, 2, 149),
    black
  );
}
